{"version":3,"sources":["styles/breakpoints.js","components/Header/index.js","utils/useMedia.js","components/Navbar/index.js","containers/App/index.js","index.js"],"names":["breakpoints","small","medium","large","xLarge","mixins","Object","keys","reduce","accumulator","label","css","Container","styled","header","Title","h1","Subtitle","p","Header","props","to","useMedia","query","queryList","React","useRef","window","matchMedia","useState","current","matches","match","setMatch","useEffect","currentList","handleChange","mqlEvent","addListener","removeListener","nav","Navbar","gtMedium","console","log","src","params","div","App","cloudimageConfig","token","process","baseURL","presets","xs","sm","md","lg","xl","sharp","org_if_sml","placeholderBackground","lowQualityPreview","minImgWidth","limitFactor","ReactDOM","render","config","document","getElementById"],"mappings":"wNAUMA,EAAc,CACjBC,MATW,IAUXC,OARY,IASZC,MAPW,KAQXC,OANY,MAcTC,EAASC,OAAOC,KAAKP,GAAaQ,QAAO,SAACC,EAAaC,GAM1D,OALAD,EAAYC,GAAS,kBAAaC,YAAZ,CAAD,kCACGX,EAAYU,GAC5BC,IAAG,WAAH,eAGDF,IACP,I,g7BCbH,IAAMG,EAAYC,IAAOC,OAAV,wCAAGD,CAAH,0DAIVR,EAAOH,OAJG,KAaVG,EAAOF,MAbG,KAgBVE,EAAOD,OAhBG,MAqBTW,EAAQF,IAAOG,GAAV,wCAAGH,CAAH,mGAONR,EAAOH,OAPD,KAWNG,EAAOF,MAXD,MAgBLc,EAAWJ,IAAOK,EAAV,wCAAGL,CAAH,yBAETR,EAAOH,OAFE,KAOTG,EAAOF,MAPE,MAYCgB,EA5Df,SAAgBC,GACb,OACG,kBAACR,EAAD,KACG,kBAAC,IAAD,CAAMS,GAAG,KACN,kBAACN,EAAD,qBAEH,kBAACE,EAAD,6B,QCKMK,MAdf,SAAkBC,GACf,IAAMC,EAAYC,IAAMC,OAAOC,OAAOC,WAAWL,IAD3B,EAEIE,IAAMI,SAASL,EAAUM,QAAQC,SAFrC,mBAEfC,EAFe,KAERC,EAFQ,KAWtB,OAPAR,IAAMS,WAAU,WACb,IAAMC,EAAcX,EAAUM,QACxBM,EAAe,SAAAC,GAAQ,OAAIJ,EAASI,EAASN,UAEnD,OADAI,EAAYG,YAAYF,GACjB,kBAAMD,EAAYI,eAAeH,MACxC,IAEIJ,GCKV,IAAMpB,EAAYC,IAAO2B,IAAV,oCAAG3B,CAAH,mBAIA4B,EAhBf,SAAgBrB,GACb,IAAMsB,EAAWpB,EAAS,eAAD,OAAgBtB,EAAYE,OAA5B,QAEzB,OADAyC,QAAQC,IAAIF,GAET,kBAAC,gBAAD,CAAeG,IAAI,gBAAgBC,OAAQJ,GAAY,4BACpD,kBAAC,EAAD,QCQT,IAAM9B,EAAYC,IAAOkC,IAAV,wCAAGlC,CAAH,qLAQAmC,EAnBf,WACG,OACG,kBAAC,IAAD,KACG,kBAAC,EAAD,KACG,kBAAC,EAAD,MACA,kBAAC,EAAD,SCLNC,G,cAAmB,CACtBC,MAAOC,aACPC,QAASD,aACTE,QAAS,CACNC,GAAG,eAAD,OAAiBtD,EAAYC,MAAQ,EAArC,OACFsD,GAAG,eAAD,OAAiBvD,EAAYC,MAA7B,OACFuD,GAAG,eAAD,OAAiBxD,EAAYE,OAA7B,OACFuD,GAAG,eAAD,OAAiBzD,EAAYG,MAA7B,OACFuD,GAAG,eAAD,OAAiB1D,EAAYI,OAA7B,QAEL0C,OAAQ,CACLa,MAAO,EACPC,WAAY,GAEfC,sBAAuB,OACvBC,kBAAmB,CAChBC,YAAa,KAEhBC,YAAa,KAGhBC,IAASC,OACN,kBAAC,qBAAD,CAAoBC,OAAQlB,GACzB,kBAAC,EAAD,OAEHmB,SAASC,eAAe,U","file":"static/js/main.18c9da86.chunk.js","sourcesContent":["import { css } from 'styled-components/macro';\n\nconst small = 426;\n\nconst medium = 768;\n\nconst large = 1024;\n\nconst xLarge = 1440;\n\nconst breakpoints = {\n   small,\n   medium,\n   large,\n   xLarge,\n};\n\n/**\n * @description Standard responsive mixin factory for styled-components, adapted from:\n * @author Tobias LindstrÃ¶m (gunnarx2)\n * @source [link](https://tobbelindstrom.com/blog/how-to-create-a-breakpoint-mixin-with-styled-components/)\n */\nconst mixins = Object.keys(breakpoints).reduce((accumulator, label) => {\n   accumulator[label] = (...args) => css`\n      @media (min-width: ${breakpoints[label]}px) {\n         ${css(...args)};\n      }\n   `;\n   return accumulator;\n}, {});\n\nexport { breakpoints, mixins };\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components/macro';\nimport { mixins } from 'styles/breakpoints';\n\nfunction Header(props) {\n   return (\n      <Container>\n         <Link to=\"/\">\n            <Title>Sai Chimata</Title>\n         </Link>\n         <Subtitle>Front-end Engineer</Subtitle>\n      </Container>\n   );\n}\n\nconst Container = styled.header`\n   background: none;\n   margin: 0 auto;\n   height: 32px;\n   ${mixins.medium`\n      height: 50px;\n      margin: 0 32px;\n      display: flex;\n      flex-direction: row;\n      align-items: center;\n      align-content: center;\n      justify-content: space-between;\n   `}\n   ${mixins.large`\n      margin: 0 64px;\n   `}\n   ${mixins.xLarge`\n      margin: 0 128px;\n   `}\n`;\n\nconst Title = styled.h1`\n   text-align: center;\n   font-size: 1.4rem;\n   line-height: 32px;\n   &:hover {\n      text-decoration: underline;\n   }\n   ${mixins.medium`\n      line-height: initial;\n      font-size: 1.5rem;\n   `}\n   ${mixins.large`\n      font-size: 1.8rem;\n   `}\n`;\n\nconst Subtitle = styled.p`\n   display: none;\n   ${mixins.medium`\n      display: initial;\n      font-size: 1rem;\n      font-weight: 550;\n   `}\n   ${mixins.large`\n      font-size: 1.2rem;\n   `}\n`;\n\nexport default Header;\n","import React from 'react';\n\nfunction useMedia(query) {\n   const queryList = React.useRef(window.matchMedia(query));\n   const [match, setMatch] = React.useState(queryList.current.matches);\n\n   React.useEffect(() => {\n      const currentList = queryList.current;\n      const handleChange = mqlEvent => setMatch(mqlEvent.matches)\n      currentList.addListener(handleChange);\n      return () => currentList.removeListener(handleChange);\n   }, []);\n\n   return match;\n}\n\nexport default useMedia;\n","import React from 'react';\nimport styled from 'styled-components/macro';\nimport { BackgroundImg } from 'react-cloudimage-responsive';\nimport useMedia from 'utils/useMedia';\nimport { breakpoints } from 'styles/breakpoints';\n\nfunction Navbar(props) {\n   const gtMedium = useMedia(`(min-width: ${breakpoints.medium}px)`);\n   console.log(gtMedium);\n   return (\n      <BackgroundImg src=\"Lift_crop.jpg\" params={gtMedium && 'gravity=east&tl_px=0,330'}>\n         <Container>\n\n         </Container>\n      </BackgroundImg>\n   );\n}\n\nconst Container = styled.nav`\n   height: 200px;\n`;\n\nexport default Navbar;\n","import React from 'react';\nimport { HashRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport styled from 'styled-components/macro';\nimport Img from 'react-cloudimage-responsive';\nimport { mixins } from 'styles/breakpoints';\nimport Header from 'components/Header';\nimport Navbar from 'components/Navbar';\n\nfunction App() {\n   return (\n      <Router>\n         <Container>\n            <Header />\n            <Navbar />\n         </Container>\n      </Router>\n   );\n}\n\nconst Container = styled.div`\n   background: linear-gradient(280deg, #ffffff 50%, #a19490);\n   background: -webkit-linear-gradient(280deg, #ffffff 50%, #a19490);\n   background-attachment: fixed;\n   min-height: 100vh;\n   width: 100vw;\n`;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'containers/App';\nimport { breakpoints } from 'styles/breakpoints';\nimport 'normalize.css/normalize.css';\nimport './index.css';\nimport { CloudimageProvider } from 'react-cloudimage-responsive';\n\nconst cloudimageConfig = {\n   token: process.env.REACT_APP_CLOUDIMAGE_TOKEN,\n   baseURL: process.env.REACT_APP_IMAGE_URL,\n   presets: {\n      xs: `(max-width: ${breakpoints.small - 1}px)`,\n      sm: `(min-width: ${breakpoints.small}px)`,\n      md: `(min-width: ${breakpoints.medium}px)`,\n      lg: `(min-width: ${breakpoints.large}px)`,\n      xl: `(min-width: ${breakpoints.xLarge}px)`,\n   },\n   params: {\n      sharp: 1,\n      org_if_sml: 1,\n   },\n   placeholderBackground: 'none',\n   lowQualityPreview: {\n      minImgWidth: 600,\n   },\n   limitFactor: 50,\n};\n\nReactDOM.render(\n   <CloudimageProvider config={cloudimageConfig}>\n      <App />\n   </CloudimageProvider>,\n   document.getElementById('root'),\n);\n"],"sourceRoot":""}