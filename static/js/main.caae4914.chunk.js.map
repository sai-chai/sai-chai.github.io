{"version":3,"sources":["styles/breakpoints.js","containers/App/index.js","index.js"],"names":["breakpoints","small","medium","large","xLarge","mixins","Object","keys","reduce","accumulator","label","css","Container","styled","div","Header","header","Title","h1","Subtitle","p","App","cloudimageConfig","token","process","baseURL","presets","xs","sm","md","lg","xl","params","sharp","org_if_sml","placeholderBackground","lowQualityPreview","minImgWidth","ReactDOM","render","config","document","getElementById"],"mappings":"+NAUMA,EAAc,CACjBC,MATW,IAUXC,OARY,IASZC,MAPW,KAQXC,OANY,MAcTC,EAASC,OAAOC,KAAKP,GAAaQ,QAAO,SAACC,EAAaC,GAM1D,OALAD,EAAYC,GAAS,kBAAaC,YAAZ,CAAD,kCACGX,EAAYU,GAC5BC,IAAG,WAAH,eAGDF,IACP,I,y6BCVH,IAAMG,EAAYC,IAAOC,IAAV,wCAAGD,CAAH,qLAQTE,EAASF,IAAOG,OAAV,wCAAGH,CAAH,0DAIPR,EAAOH,OAJA,KAaPG,EAAOF,MAbA,KAgBPE,EAAOD,OAhBA,MAqBNa,EAAQJ,IAAOK,GAAV,wCAAGL,CAAH,gEAINR,EAAOH,OAJD,KAQNG,EAAOF,MARD,MAaLgB,EAAWN,IAAOO,EAAV,wCAAGP,CAAH,yBAETR,EAAOH,OAFE,KAOTG,EAAOF,MAPE,MAYCkB,EAnEf,WACG,OACG,kBAAC,IAAD,KACG,kBAACT,EAAD,KACG,kBAACG,EAAD,KACG,kBAACE,EAAD,oBACA,kBAACE,EAAD,+BCJTG,G,cAAmB,CACtBC,MAAOC,aACPC,QAASD,aACTE,QAAS,CACNC,GAAG,eAAD,OAAiB3B,EAAYC,MAAQ,EAArC,OACF2B,GAAG,eAAD,OAAiB5B,EAAYC,MAA7B,OACF4B,GAAG,eAAD,OAAiB7B,EAAYE,OAA7B,OACF4B,GAAG,eAAD,OAAiB9B,EAAYG,MAA7B,OACF4B,GAAG,eAAD,OAAiB/B,EAAYI,OAA7B,QAEL4B,OAAQ,CACLC,MAAO,EACPC,WAAY,GAEfC,sBAAuB,OACvBC,kBAAmB,CAChBC,YAAa,OAInBC,IAASC,OACN,kBAAC,qBAAD,CAAoBC,OAAQlB,GACzB,kBAAC,EAAD,OAEHmB,SAASC,eAAe,U","file":"static/js/main.caae4914.chunk.js","sourcesContent":["import { css } from 'styled-components/macro';\n\nconst small = 426;\n\nconst medium = 768;\n\nconst large = 1024;\n\nconst xLarge = 1440;\n\nconst breakpoints = {\n   small,\n   medium,\n   large,\n   xLarge,\n};\n\n/**\n * @description Standard responsive mixin factory for styled-components\n * @author Tobias LindstrÃ¶m (gunnarx2)\n * @source [link](https://tobbelindstrom.com/blog/how-to-create-a-breakpoint-mixin-with-styled-components/)\n */\nconst mixins = Object.keys(breakpoints).reduce((accumulator, label) => {\n   accumulator[label] = (...args) => css`\n      @media (min-width: ${breakpoints[label]}px) {\n         ${css(...args)};\n      }\n   `;\n   return accumulator;\n}, {});\n\nexport { breakpoints, mixins };\n","import React from 'react';\nimport { HashRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport styled from 'styled-components/macro';\nimport Img from 'react-cloudimage-responsive';\nimport { mixins } from 'styles/breakpoints';\n\nfunction App() {\n   return (\n      <Router>\n         <Container>\n            <Header>\n               <Title>Sai Chimata</Title>\n               <Subtitle>Front-end Engineer</Subtitle>\n            </Header>\n         </Container>\n      </Router>\n   );\n}\n\nconst Container = styled.div`\n   background: linear-gradient(280deg, #ffffff 50%, #a19490);\n   background: -webkit-linear-gradient(280deg, #ffffff 50%, #a19490);\n   background-attachment: fixed;\n   min-height: 100vh;\n   width: 100vw;\n`;\n\nconst Header = styled.header`\n   background: none;\n   margin: 0 auto;\n   height: 32px;\n   ${mixins.medium`\n      height: 50px;\n      margin: 0 32px;\n      display: flex;\n      flex-direction: row;\n      align-items: center;\n      align-content: center;\n      justify-content: space-between;\n   `}\n   ${mixins.large`\n      margin: 0 64px;\n   `}\n   ${mixins.xLarge`\n      margin: 0 128px;\n   `}\n`;\n\nconst Title = styled.h1`\n   text-align: center;\n   font-size: 1.2rem;\n   line-height: 32px;\n   ${mixins.medium`\n      line-height: initial;\n      font-size: 1.5rem;\n   `}\n   ${mixins.large`\n      font-size: 1.8rem;\n   `}\n`;\n\nconst Subtitle = styled.p`\n   display: none;\n   ${mixins.medium`\n      display: initial;\n      font-size: 1rem;\n      font-weight: 550;\n   `}\n   ${mixins.large`\n      font-size: 1.2rem;\n   `}\n`;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'containers/App';\nimport { breakpoints } from 'styles/breakpoints';\nimport 'normalize.css/normalize.css';\nimport './index.css';\nimport { CloudimageProvider } from 'react-cloudimage-responsive';\n\nconst cloudimageConfig = {\n   token: process.env.REACT_APP_CLOUDIMAGE_TOKEN,\n   baseURL: process.env.REACT_APP_IMAGE_URL,\n   presets: {\n      xs: `(max-width: ${breakpoints.small - 1}px)`,\n      sm: `(min-width: ${breakpoints.small}px)`,\n      md: `(min-width: ${breakpoints.medium}px)`,\n      lg: `(min-width: ${breakpoints.large}px)`,\n      xl: `(min-width: ${breakpoints.xLarge}px)`,\n   },\n   params: {\n      sharp: 1,\n      org_if_sml: 1,\n   },\n   placeholderBackground: 'none',\n   lowQualityPreview: {\n      minImgWidth: 10000,\n   },\n};\n\nReactDOM.render(\n   <CloudimageProvider config={cloudimageConfig}>\n      <App />\n   </CloudimageProvider>,\n   document.getElementById('root'),\n);\n"],"sourceRoot":""}